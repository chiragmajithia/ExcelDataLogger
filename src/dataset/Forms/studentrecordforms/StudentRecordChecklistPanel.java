/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dataset.Forms.studentrecordforms;

import dataset.Workbook;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Chirag
 */
public class StudentRecordChecklistPanel extends javax.swing.JPanel
{

    /**
     * Creates new form StudenRecordChecklistPanel
     */
    PersonalDetailsPanel personal_details;
    List<HeaderPanel> headers = new ArrayList<HeaderPanel>();
    Workbook db;
    
    public StudentRecordChecklistPanel(Workbook db) {
        this.db = db;
        initComponents();
        GridLayout jHeaderPanelLayout = new GridLayout(7,0);
        
        String application_fields[] = {"Student Demographic Sheet","Student Photo","Program Application","Income & Eligibility Status","Acceptance Letter","Student Participation Agreemment","Parent Participation Agreement","Financial Literacy Agreement"};
        String summer_forms_fields[] = {"Summer Enrollment Form","Health Information","Immunization Form","Medical History Form","Dietart Restrictions Form","Liability Release Form","Emergency Information Form","Residence Hall/Lost Key,Library Materials Agreement"};
        String academic_fields[] = {"High School Academic Schedule","Grade Reports from school","HSA scores","Student IAP","Student Award","College / University Acceptance Letter","SAT Academy/Summer Schedule"};
        String assessment_fields[] = {"SDS","CSI","Other Assesments"};
        String counseling_fields[] = {"Service Log","Disciplinary Actions","Permission Forms","Parent Hour Forms","Other Counselling Information"};
        String financial_medical_fields[] = {"Payroll Information (I-9,direct deposit forms)"};
        
        jHeaderPanel.setLayout(jHeaderPanelLayout);
        personal_details = new PersonalDetailsPanel();
        HeaderPanel application = new HeaderPanel("Application",application_fields);
        HeaderPanel summer_forms= new HeaderPanel("Summer Forms",summer_forms_fields);
        HeaderPanel academic = new HeaderPanel("Academic",academic_fields);
        HeaderPanel assesment = new HeaderPanel("Assesment",assessment_fields);
        HeaderPanel counseling = new HeaderPanel("Counseling",counseling_fields);
        HeaderPanel financial_medical = new HeaderPanel("Financial / Medical Information",financial_medical_fields);
        jHeaderPanel.add(personal_details);
        jHeaderPanel.add(application);
        jHeaderPanel.add(summer_forms);
        jHeaderPanel.add(academic);
        jHeaderPanel.add(assesment);
        jHeaderPanel.add(counseling);
        jHeaderPanel.add(financial_medical);
        headers.add(application);
        headers.add(summer_forms);
        headers.add(academic);
        headers.add(assesment);
        headers.add(counseling);
        headers.add(financial_medical);
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jTitle = new javax.swing.JLabel();
        jSubmit = new javax.swing.JButton();
        jHeaderContainer = new javax.swing.JScrollPane();
        jHeaderPanel = new javax.swing.JPanel();
        jStatus = new javax.swing.JLabel();

        jTitle.setBackground(new java.awt.Color(204, 204, 255));
        jTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jTitle.setText("STUDENT RECORD CHECKLIST");
        jTitle.setOpaque(true);

        jSubmit.setText("Submit");
        jSubmit.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jSubmitMouseClicked(evt);
            }
        });

        jHeaderPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jHeaderPanel.setAutoscrolls(true);
        jHeaderPanel.setPreferredSize(new java.awt.Dimension(800, 800));

        javax.swing.GroupLayout jHeaderPanelLayout = new javax.swing.GroupLayout(jHeaderPanel);
        jHeaderPanel.setLayout(jHeaderPanelLayout);
        jHeaderPanelLayout.setHorizontalGroup(
            jHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        jHeaderPanelLayout.setVerticalGroup(
            jHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 798, Short.MAX_VALUE)
        );

        jHeaderContainer.setViewportView(jHeaderPanel);

        jStatus.setForeground(new java.awt.Color(204, 0, 0));
        jStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSubmit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)))
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jHeaderContainer)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHeaderContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSubmit)
                    .addComponent(jStatus))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSubmitMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jSubmitMouseClicked
    {//GEN-HEADEREND:event_jSubmitMouseClicked
        int cnt = headers.size();
        
        List<Object> data = new ArrayList<Object>();
        System.out.println("cnt = " + cnt);
        System.out.println("Name = " + personal_details.jName.getText());
        System.out.println("School =" + personal_details.jSchool.getSelectedItem().toString());
        System.out.println("Counselor =" + personal_details.jCounselor.getSelectedItem().toString());
        data.add(personal_details.jName.getText());
        data.add(personal_details.jSchool.getSelectedItem().toString());
        data.add(personal_details.jCounselor.getSelectedItem().toString());
        for(int i = 0; i < headers.size(); i++)
        {
            HeaderPanel hp = headers.get(i);
            Boolean vals[] = hp.getFieldsValue();
            String title[] = hp.getHeaders();
            System.out.println("Fields length = " + Integer.toString(title.length) + "vals.length = " + Integer.toString(vals.length) );
            for (int j = 0; j < vals.length; j++)
            {
                System.out.println("j = " + Integer.toString(j));
                System.out.println("title = " + title[j]);
                System.out.println(title[j]+" " + Boolean.toString(vals[j]));
                data.add(vals[j]);
            }
        }
        db.appendDatabase(data);
        System.out.println("Database appended");
        reset();
    }//GEN-LAST:event_jSubmitMouseClicked

void reset()
{
    personal_details.jName.setText("");
    for (int i = 0; i < headers.size(); i++) {
        HeaderPanel hp = headers.get(i);
        hp.resetFieldsValue();   
    }
    System.out.println("Reset done");
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jHeaderContainer;
    private javax.swing.JPanel jHeaderPanel;
    private javax.swing.JLabel jStatus;
    private javax.swing.JButton jSubmit;
    private javax.swing.JLabel jTitle;
    // End of variables declaration//GEN-END:variables
}
